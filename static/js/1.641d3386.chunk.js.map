{"version":3,"sources":["helpers/IntlMessages.js","components/common/CustomBootstrap.js","components/svg/MenuIcon.js","components/svg/MobileMenuIcon.js","containers/navs/Topnav.DarkSwitch.js","containers/navs/Topnav.js","constants/menu.js","containers/navs/Sidebar.js","containers/navs/Footer.js","layout/AppLayout.js","helpers/carousel/images/logo.jpeg"],"names":["injectIntl","props","withRef","Colxx","widths","Separator","className","MenuIcon","xmlns","viewBox","x","y","width","height","MobileMenuIcon","TopnavDarkSwitch","useState","switchChecked","setSwitchChecked","tooltipOpen","setTooltipOpen","useEffect","color","getCurrentColor","indexOf","id","checked","onChange","replace","setCurrentColor","setTimeout","window","location","reload","Tooltip","placement","isOpen","target","toggle","connect","menu","settings","containerClassnames","menuClickCount","selectedMenuHasSubItems","locale","setContainerClassnamesAction","setContainerClassnames","clickOnMobileMenuAction","clickOnMobileMenu","changeLocaleAction","changeLocale","intl","history","logoutUserAction","isInFullScreen","setIsInFullScreen","role","setRole","check","user","reactLocalStorage","get","JSON","parse","console","log","messages","to","onClick","e","_clickCount","_conClassnames","preventDefault","event","document","createEvent","initEvent","dispatchEvent","menuButtonClick","_containerClassnames","mobileMenuButtonClick","src","logo","alt","style","marginLeft","isDarkSwitchActive","type","isFS","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","docElm","documentElement","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","msRequestFullscreen","UncontrolledDropdown","DropdownToggle","DropdownMenu","right","DropdownItem","remove","push","data","icon","label","Sidebar","Component","constructor","super","handleWindowResize","isTrusted","this","nextClasses","getMenuClassesForResize","join","handleDocumentClick","container","getContainer","isMenuClick","classList","contains","parentElement","setState","viewingParentMenu","classes","menuHiddenBreakpoint","subHiddenBreakpoint","split","filter","windowWidth","innerWidth","includes","ReactDOM","findDOMNode","hasSubItems","getIsHasSubItem","changeSelectedMenuHasSubItems","currentClasses","clickIndex","handleProps","addEvents","forEach","addEventListener","removeEvents","removeEventListener","setSelectedLiActive","callback","oldli","querySelector","oldliSub","selectedSublink","add","selectedlink","selectedParentMenu","getAttribute","selectedParentNoSubItem","state","menuItems","setHasSubItemStatus","hasSubmenu","menuItem","find","subs","length","openSubMenu","selectedParent","hasSubMenu","addContainerClassname","toggleMenuCollapse","menuKey","collapsedMenus","filteredList","componentDidUpdate","prevProps","pathname","scrollTo","componentDidMount","componentWillUnmount","render","options","suppressScrollX","wheelPropagation","Nav","vertical","map","item","NavItem","key","classnames","active","newWindow","href","rel","data-flag","IntlMessages","data-parent","sub","index","Collapse","thirdSub","thirdIndex","withRouter","authUser","changeDefaultClassnames","Footer","Row","xxs","sm","children","module","exports"],"mappings":"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","file":"static/js/1.641d3386.chunk.js","sourcesContent":["import React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nconst InjectMassage = (props) => <FormattedMessage {...props} />;\n\nexport default injectIntl(InjectMassage, {\n  withRef: false,\n});\n","import React from 'react';\nimport { Col } from 'reactstrap';\n\nconst Colxx = (props) => (\n  <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\n);\nconst Separator = ({ className }) => (\n  <div className={`separator ${className}`} />\n);\nexport { Colxx, Separator };\n","import React from 'react';\n\nconst MenuIcon = () => {\n  return (\n    <>\n      <svg\n        className=\"main\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 9 17\"\n      >\n        <rect x=\"0.48\" y=\"0.5\" width=\"7\" height=\"1\" />\n        <rect x=\"0.48\" y=\"7.5\" width=\"7\" height=\"1\" />\n        <rect x=\"0.48\" y=\"15.5\" width=\"7\" height=\"1\" />\n      </svg>\n      <svg\n        className=\"sub\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 18 17\"\n      >\n        <rect x=\"1.56\" y=\"0.5\" width=\"16\" height=\"1\" />\n        <rect x=\"1.56\" y=\"7.5\" width=\"16\" height=\"1\" />\n        <rect x=\"1.56\" y=\"15.5\" width=\"16\" height=\"1\" />\n      </svg>\n    </>\n  );\n};\n\nexport default MenuIcon;\n","import React from 'react';\n\nconst MobileMenuIcon = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 26 17\">\n      <rect x=\"0.5\" y=\"0.5\" width=\"25\" height=\"1\" />\n      <rect x=\"0.5\" y=\"7.5\" width=\"25\" height=\"1\" />\n      <rect x=\"0.5\" y=\"15.5\" width=\"25\" height=\"1\" />\n    </svg>\n  );\n};\n\nexport default MobileMenuIcon;\n","import React, { useState, useEffect } from 'react';\nimport Switch from 'rc-switch';\nimport 'rc-switch/assets/index.css';\nimport { Tooltip } from 'reactstrap';\nimport { getCurrentColor, setCurrentColor } from '../../helpers/Utils';\n\nconst TopnavDarkSwitch = () => {\n  const [switchChecked, setSwitchChecked] = useState(false);\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n\n  useEffect(() => {\n    const color = getCurrentColor();\n    setSwitchChecked(color.indexOf('dark') > -1);\n  }, []);\n\n  const changeMode = () => {\n    let color = getCurrentColor();\n\n    if (color.indexOf('dark') > -1) {\n      color = color.replace('dark', 'light');\n    } else if (color.indexOf('light') > -1) {\n      color = color.replace('light', 'dark');\n    }\n    setCurrentColor(color);\n    setSwitchChecked(color.indexOf('dark') > -1);\n    setTimeout(() => {\n      window.location.reload();\n    }, 500);\n  };\n\n  return (\n    <div className=\"d-none d-md-inline-block align-middle mr-3\">\n      <Switch\n        id=\"tooltip_switch\"\n        className=\"custom-switch custom-switch-primary custom-switch-small\"\n        checked={switchChecked}\n        onChange={changeMode}\n      />\n      <Tooltip\n        placement=\"left\"\n        isOpen={tooltipOpen}\n        target=\"tooltip_switch\"\n        toggle={() => setTooltipOpen(!tooltipOpen)}\n      >\n        Dark Mode\n      </Tooltip>\n    </div>\n  );\n};\nexport default TopnavDarkSwitch;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable no-use-before-define */\nimport React, { useState, useEffect } from 'react';\nimport { injectIntl } from 'react-intl';\nimport { reactLocalStorage } from 'reactjs-localstorage';\n\nimport {\n  UncontrolledDropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownMenu,\n  Input,\n} from 'reactstrap';\n\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport IntlMessages from '../../helpers/IntlMessages';\nimport {\n  setContainerClassnames,\n  clickOnMobileMenu,\n  logoutUser,\n  changeLocale,\n} from '../../redux/actions';\n\nimport {\n  menuHiddenBreakpoint,\n  searchPath,\n  localeOptions,\n  isDarkSwitchActive,\n  buyUrl,\n  adminRoot,\n} from '../../constants/defaultValues';\n\nimport { MobileMenuIcon, MenuIcon } from '../../components/svg';\nimport TopnavEasyAccess from './Topnav.EasyAccess';\nimport TopnavNotifications from './Topnav.Notifications';\nimport TopnavDarkSwitch from './Topnav.DarkSwitch';\n\nimport { getDirection, setDirection } from '../../helpers/Utils';\nimport logo from './../../helpers/carousel/images/logo.jpeg';\n\nconst TopNav = ({\n  intl,\n  history,\n  containerClassnames,\n  menuClickCount,\n  selectedMenuHasSubItems,\n  locale,\n  setContainerClassnamesAction,\n  clickOnMobileMenuAction,\n  logoutUserAction,\n  changeLocaleAction,\n}) => {\n  const [isInFullScreen, setIsInFullScreen] = useState(false);\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [userName, setUserName] = useState('');\n  const [role, setRole] = useState('');\n\n  useEffect(() => {\n    check();\n  }, []);\n\n  const check = () => {\n    let user = reactLocalStorage.get('user_data');\n    if (user) {\n      user = JSON.parse(user);\n      console.log('user>>>>', user);\n      setRole(user.role);\n      // setUserId(user.userId);\n      // setUserName(user.namef);\n    }\n  };\n\n  const search = () => {\n    history.push(`${searchPath}?key=${searchKeyword}`);\n    setSearchKeyword('');\n  };\n\n  const handleChangeLocale = (_locale, direction) => {\n    changeLocaleAction(_locale);\n\n    const currentDirection = getDirection().direction;\n    if (direction !== currentDirection) {\n      setDirection(direction);\n      setTimeout(() => {\n        window.location.reload();\n      }, 500);\n    }\n  };\n\n  const isInFullScreenFn = () => {\n    return (\n      (document.fullscreenElement && document.fullscreenElement !== null) ||\n      (document.webkitFullscreenElement &&\n        document.webkitFullscreenElement !== null) ||\n      (document.mozFullScreenElement &&\n        document.mozFullScreenElement !== null) ||\n      (document.msFullscreenElement && document.msFullscreenElement !== null)\n    );\n  };\n\n  const handleSearchIconClick = (e) => {\n    if (window.innerWidth < menuHiddenBreakpoint) {\n      let elem = e.target;\n      if (!e.target.classList.contains('search')) {\n        if (e.target.parentElement.classList.contains('search')) {\n          elem = e.target.parentElement;\n        } else if (\n          e.target.parentElement.parentElement.classList.contains('search')\n        ) {\n          elem = e.target.parentElement.parentElement;\n        }\n      }\n\n      if (elem.classList.contains('mobile-view')) {\n        search();\n        elem.classList.remove('mobile-view');\n        removeEventsSearch();\n      } else {\n        elem.classList.add('mobile-view');\n        addEventsSearch();\n      }\n    } else {\n      search();\n    }\n    e.stopPropagation();\n  };\n\n  const handleDocumentClickSearch = (e) => {\n    let isSearchClick = false;\n    if (\n      e.target &&\n      e.target.classList &&\n      (e.target.classList.contains('navbar') ||\n        e.target.classList.contains('simple-icon-magnifier'))\n    ) {\n      isSearchClick = true;\n      if (e.target.classList.contains('simple-icon-magnifier')) {\n        search();\n      }\n    } else if (\n      e.target.parentElement &&\n      e.target.parentElement.classList &&\n      e.target.parentElement.classList.contains('search')\n    ) {\n      isSearchClick = true;\n    }\n\n    if (!isSearchClick) {\n      const input = document.querySelector('.mobile-view');\n      if (input && input.classList) input.classList.remove('mobile-view');\n      removeEventsSearch();\n      setSearchKeyword('');\n    }\n  };\n\n  const removeEventsSearch = () => {\n    document.removeEventListener('click', handleDocumentClickSearch, true);\n  };\n\n  const addEventsSearch = () => {\n    document.addEventListener('click', handleDocumentClickSearch, true);\n  };\n\n  const handleSearchInputKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      search();\n    }\n  };\n\n  const toggleFullScreen = () => {\n    const isFS = isInFullScreenFn();\n\n    const docElm = document.documentElement;\n    if (!isFS) {\n      if (docElm.requestFullscreen) {\n        docElm.requestFullscreen();\n      } else if (docElm.mozRequestFullScreen) {\n        docElm.mozRequestFullScreen();\n      } else if (docElm.webkitRequestFullScreen) {\n        docElm.webkitRequestFullScreen();\n      } else if (docElm.msRequestFullscreen) {\n        docElm.msRequestFullscreen();\n      }\n    } else if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.msExitFullscreen) {\n      document.msExitFullscreen();\n    }\n    setIsInFullScreen(!isFS);\n  };\n\n  const handleLogout = () => {\n    reactLocalStorage.remove('user');\n    reactLocalStorage.remove('user_data');\n    reactLocalStorage.remove('token');\n    return history.push('/login');\n  };\n\n  const menuButtonClick = (e, _clickCount, _conClassnames) => {\n    e.preventDefault();\n\n    setTimeout(() => {\n      const event = document.createEvent('HTMLEvents');\n      event.initEvent('resize', false, false);\n      window.dispatchEvent(event);\n    }, 350);\n    setContainerClassnamesAction(\n      _clickCount + 1,\n      _conClassnames,\n      selectedMenuHasSubItems\n    );\n  };\n\n  const mobileMenuButtonClick = (e, _containerClassnames) => {\n    e.preventDefault();\n    clickOnMobileMenuAction(_containerClassnames);\n  };\n\n  const { messages } = intl;\n  return (\n    <nav className=\"navbar fixed-top\">\n      <div className=\"d-flex align-items-center navbar-left\">\n        <NavLink\n          to=\"#\"\n          location={{}}\n          className=\"menu-button d-none d-md-block\"\n          onClick={(e) =>\n            menuButtonClick(e, menuClickCount, containerClassnames)\n          }\n        >\n          <MenuIcon />\n        </NavLink>\n        <NavLink\n          to=\"#\"\n          location={{}}\n          className=\"menu-button-mobile d-xs-block d-sm-block d-md-none\"\n          onClick={(e) => mobileMenuButtonClick(e, containerClassnames)}\n        >\n          <MobileMenuIcon />\n        </NavLink>\n\n        <div className=\"\">\n          <img\n            src={logo}\n            alt=\"logo\"\n            style={{\n              marginLeft: '10px',\n              width: '120px',\n            }}\n          />\n          {/* <Input\n            name=\"searchKeyword\"\n            id=\"searchKeyword\"\n            placeholder={messages['menu.search']}\n            value={searchKeyword}\n            onChange={(e) => setSearchKeyword(e.target.value)}\n            onKeyPress={(e) => handleSearchInputKeyPress(e)}\n          />\n          <span\n            className=\"search-icon\"\n            onClick={(e) => handleSearchIconClick(e)}\n          >\n            <i className=\"simple-icon-magnifier\" />\n          </span> */}\n        </div>\n\n        {/* <div className=\"d-inline-block\">\n          <UncontrolledDropdown className=\"ml-2\">\n            <DropdownToggle\n              caret\n              color=\"light\"\n              size=\"sm\"\n              className=\"language-button\"\n            >\n              <span className=\"name\">{locale.toUpperCase()}</span>\n            </DropdownToggle>\n            <DropdownMenu className=\"mt-3\" right>\n              {localeOptions.map((l) => {\n                return (\n                  <DropdownItem\n                    onClick={() => handleChangeLocale(l.id, l.direction)}\n                    key={l.id}\n                  >\n                    {l.name}\n                  </DropdownItem>\n                );\n              })}\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </div> */}\n        {/* <div className=\"position-relative d-none d-none d-lg-inline-block\">\n          <a\n            className=\"btn btn-outline-primary btn-sm ml-2\"\n            target=\"_top\"\n            href={buyUrl}\n          >\n            <IntlMessages id=\"user.buy\" />\n          </a>\n        </div> */}\n      </div>\n\n      {/* logo img */}\n      {/* <NavLink className=\"navbar-logo\" to={adminRoot}>\n        <span className=\"logo d-none d-xs-block\" />\n        <span className=\"logo-mobile d-block d-xs-none\" />\n      </NavLink> */}\n\n      <div className=\"navbar-right\">\n        {isDarkSwitchActive && <TopnavDarkSwitch />}\n        <div className=\"header-icons d-inline-block align-middle\">\n          {/* <TopnavEasyAccess />\n          <TopnavNotifications /> */}\n          <button\n            className=\"header-icon btn btn-empty d-none d-sm-inline-block\"\n            type=\"button\"\n            id=\"fullScreenButton\"\n            onClick={toggleFullScreen}\n          >\n            {isInFullScreen ? (\n              <i className=\"simple-icon-size-actual d-block\" />\n            ) : (\n              <i className=\"simple-icon-size-fullscreen d-block\" />\n            )}\n          </button>\n        </div>\n\n        <div className=\"user d-inline-block\">\n          {role === 'admin' ? (\n            <UncontrolledDropdown className=\"dropdown-menu-right\">\n              <DropdownToggle className=\"p-0\" color=\"empty\">\n                {/* <span className=\"name mr-1\">{userName}</span> */}\n                <span>\n                  <h6>Admin</h6>\n                </span>\n              </DropdownToggle>\n              <DropdownMenu className=\"mt-3\" right>\n                <DropdownItem>Account</DropdownItem>\n                {/* <NavLink to=\"/login\">\n                  <DropdownItem>Login</DropdownItem>\n                </NavLink> */}\n                <DropdownItem onClick={() => handleLogout()}>\n                  Sign out\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          ) : (\n            <NavLink to=\"/login\">\n              <DropdownItem>Login</DropdownItem>\n            </NavLink>\n          )}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = ({ menu, settings }) => {\n  const { containerClassnames, menuClickCount, selectedMenuHasSubItems } = menu;\n  const { locale } = settings;\n  return {\n    containerClassnames,\n    menuClickCount,\n    selectedMenuHasSubItems,\n    locale,\n  };\n};\nexport default injectIntl(\n  connect(mapStateToProps, {\n    setContainerClassnamesAction: setContainerClassnames,\n    clickOnMobileMenuAction: clickOnMobileMenu,\n    changeLocaleAction: changeLocale,\n  })(TopNav)\n);\n","import { adminRoot } from './defaultValues';\n// import { UserRole } from \"../helpers/authHelper\"\n\nconst data = [\n  // {\n  //   id: 'profile',\n  //   icon: 'iconsminds-air-balloon-1',\n  //   label: 'Profile',\n  //   to: `/profile`,\n  //   // roles: [UserRole.Admin, UserRole.Editor],\n  //   // subs: [\n  //   //   {\n  //   //     icon: 'simple-icon-paper-plane',\n  //   //     label: 'menu.start',\n  //   //     to: `${adminRoot}/gogo/start`,\n  //   //   },\n  //   // ],\n  // },\n  {\n    id: 'dashboard',\n    icon: 'iconsminds-dashboard',\n    label: 'Dashboard',\n    to: `/dashboard`,\n    // subs: [\n    //   {\n    //     icon: 'simple-icon-paper-plane',\n    //     label: 'menu.second',\n    //     to: `${adminRoot}/second-menu/second`,\n    //   },\n    // ],\n  },\n  {\n    id: 'property',\n    icon: 'iconsminds-home-4',\n    label: 'Properties',\n    to: `/properties`,\n  },\n  {\n    id: 'car',\n    icon: 'iconsminds-car',\n    label: 'Car',\n    to: `/car`,\n  },\n  {\n    id: 'buildingmaterial',\n    icon: 'iconsminds-empire-state-building',\n    label: 'Building Material',\n    to: `/building-material`,\n  },\n  {\n    id: 'precast',\n    icon: 'iconsminds-puzzle',\n    label: 'Precast',\n    to: `/precast`,\n  },\n\n  {\n    id: 'investment',\n    icon: 'iconsminds-dollar',\n    label: 'Investement',\n    to: `/investement`,\n  },\n  {\n    id: 'renovation',\n    icon: 'iconsminds-the-white-house',\n    label: 'Renovation',\n    to: `/renovation`,\n  },\n\n  // {\n  //   id: 'blankpage',\n  //   icon: 'iconsminds-bucket',\n  //   label: 'menu.blank-page',\n  //   to: `${adminRoot}/blank-page`,\n  // },\n  // {\n  //   id: 'docs',\n  //   icon: 'iconsminds-library',\n  //   label: 'menu.docs',\n  //   to: 'https://gogo-react-docs.coloredstrategies.com/',\n  //   newWindow: true,\n  // },\n];\nexport default data;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport { Nav, NavItem, Collapse } from 'reactstrap';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport classnames from 'classnames';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\nimport IntlMessages from '../../helpers/IntlMessages';\n\nimport {\n  setContainerClassnames,\n  addContainerClassname,\n  changeDefaultClassnames,\n  changeSelectedMenuHasSubItems,\n} from '../../redux/actions';\n\nimport menuItems from '../../constants/menu';\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedParentMenu: '',\n      viewingParentMenu: '',\n      collapsedMenus: [],\n    };\n  }\n\n  handleWindowResize = (event) => {\n    if (event && !event.isTrusted) {\n      return;\n    }\n    const { containerClassnames } = this.props;\n    const nextClasses = this.getMenuClassesForResize(containerClassnames);\n    this.props.setContainerClassnames(\n      0,\n      nextClasses.join(' '),\n      this.props.selectedMenuHasSubItems\n    );\n  };\n\n  handleDocumentClick = (e) => {\n    const container = this.getContainer();\n    let isMenuClick = false;\n    if (\n      e.target &&\n      e.target.classList &&\n      (e.target.classList.contains('menu-button') ||\n        e.target.classList.contains('menu-button-mobile'))\n    ) {\n      isMenuClick = true;\n    } else if (\n      e.target.parentElement &&\n      e.target.parentElement.classList &&\n      (e.target.parentElement.classList.contains('menu-button') ||\n        e.target.parentElement.classList.contains('menu-button-mobile'))\n    ) {\n      isMenuClick = true;\n    } else if (\n      e.target.parentElement &&\n      e.target.parentElement.parentElement &&\n      e.target.parentElement.parentElement.classList &&\n      (e.target.parentElement.parentElement.classList.contains('menu-button') ||\n        e.target.parentElement.parentElement.classList.contains(\n          'menu-button-mobile'\n        ))\n    ) {\n      isMenuClick = true;\n    }\n    if (container.contains(e.target) || container === e.target || isMenuClick) {\n      return;\n    }\n    this.setState({\n      viewingParentMenu: '',\n    });\n    this.toggle();\n  };\n\n  getMenuClassesForResize = (classes) => {\n    const { menuHiddenBreakpoint, subHiddenBreakpoint } = this.props;\n    let nextClasses = classes.split(' ').filter((x) => x !== '');\n    const windowWidth = window.innerWidth;\n    if (windowWidth < menuHiddenBreakpoint) {\n      nextClasses.push('menu-mobile');\n    } else if (windowWidth < subHiddenBreakpoint) {\n      nextClasses = nextClasses.filter((x) => x !== 'menu-mobile');\n      if (\n        nextClasses.includes('menu-default') &&\n        !nextClasses.includes('menu-sub-hidden')\n      ) {\n        nextClasses.push('menu-sub-hidden');\n      }\n    } else {\n      nextClasses = nextClasses.filter((x) => x !== 'menu-mobile');\n      if (\n        nextClasses.includes('menu-default') &&\n        nextClasses.includes('menu-sub-hidden')\n      ) {\n        nextClasses = nextClasses.filter((x) => x !== 'menu-sub-hidden');\n      }\n    }\n    return nextClasses;\n  };\n\n  getContainer = () => {\n    return ReactDOM.findDOMNode(this);\n  };\n\n  toggle = () => {\n    const hasSubItems = this.getIsHasSubItem();\n    this.props.changeSelectedMenuHasSubItems(hasSubItems);\n    const { containerClassnames, menuClickCount } = this.props;\n    const currentClasses = containerClassnames\n      ? containerClassnames.split(' ').filter((x) => x !== '')\n      : '';\n    let clickIndex = -1;\n\n    if (!hasSubItems) {\n      if (\n        currentClasses.includes('menu-default') &&\n        (menuClickCount % 4 === 0 || menuClickCount % 4 === 3)\n      ) {\n        clickIndex = 1;\n      } else if (\n        currentClasses.includes('menu-sub-hidden') &&\n        (menuClickCount === 2 || menuClickCount === 3)\n      ) {\n        clickIndex = 0;\n      } else if (\n        currentClasses.includes('menu-hidden') ||\n        currentClasses.includes('menu-mobile')\n      ) {\n        clickIndex = 0;\n      }\n    } else if (\n      currentClasses.includes('menu-sub-hidden') &&\n      menuClickCount === 3\n    ) {\n      clickIndex = 2;\n    } else if (\n      currentClasses.includes('menu-hidden') ||\n      currentClasses.includes('menu-mobile')\n    ) {\n      clickIndex = 0;\n    }\n    if (clickIndex >= 0) {\n      this.props.setContainerClassnames(\n        clickIndex,\n        containerClassnames,\n        hasSubItems\n      );\n    }\n  };\n\n  handleProps = () => {\n    this.addEvents();\n  };\n\n  addEvents = () => {\n    ['click', 'touchstart', 'touchend'].forEach((event) =>\n      document.addEventListener(event, this.handleDocumentClick, true)\n    );\n  };\n\n  removeEvents = () => {\n    ['click', 'touchstart', 'touchend'].forEach((event) =>\n      document.removeEventListener(event, this.handleDocumentClick, true)\n    );\n  };\n\n  setSelectedLiActive = (callback) => {\n    const oldli = document.querySelector('.sub-menu  li.active');\n    if (oldli != null) {\n      oldli.classList.remove('active');\n    }\n\n    const oldliSub = document.querySelector('.third-level-menu  li.active');\n    if (oldliSub != null) {\n      oldliSub.classList.remove('active');\n    }\n\n    /* set selected parent menu */\n    const selectedSublink = document.querySelector(\n      '.third-level-menu  a.active'\n    );\n    if (selectedSublink != null) {\n      selectedSublink.parentElement.classList.add('active');\n    }\n\n    const selectedlink = document.querySelector('.sub-menu  a.active');\n    if (selectedlink != null) {\n      selectedlink.parentElement.classList.add('active');\n      this.setState(\n        {\n          selectedParentMenu: selectedlink.parentElement.parentElement.getAttribute(\n            'data-parent'\n          ),\n        },\n        callback\n      );\n    } else {\n      const selectedParentNoSubItem = document.querySelector(\n        '.main-menu  li a.active'\n      );\n      if (selectedParentNoSubItem != null) {\n        this.setState(\n          {\n            selectedParentMenu: selectedParentNoSubItem.getAttribute(\n              'data-flag'\n            ),\n          },\n          callback\n        );\n      } else if (this.state.selectedParentMenu === '') {\n        this.setState(\n          {\n            selectedParentMenu: menuItems[0].id,\n          },\n          callback\n        );\n      }\n    }\n  };\n\n  setHasSubItemStatus = () => {\n    const hasSubmenu = this.getIsHasSubItem();\n    this.props.changeSelectedMenuHasSubItems(hasSubmenu);\n    this.toggle();\n  };\n\n  getIsHasSubItem = () => {\n    const { selectedParentMenu } = this.state;\n    const menuItem = menuItems.find((x) => x.id === selectedParentMenu);\n    if (menuItem)\n      return !!(menuItem && menuItem.subs && menuItem.subs.length > 0);\n    return false;\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      this.setSelectedLiActive(this.setHasSubItemStatus);\n\n      window.scrollTo(0, 0);\n    }\n    this.handleProps();\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleWindowResize);\n    this.handleWindowResize();\n    this.handleProps();\n    this.setSelectedLiActive(this.setHasSubItemStatus);\n  }\n\n  componentWillUnmount() {\n    this.removeEvents();\n    window.removeEventListener('resize', this.handleWindowResize);\n  }\n\n  openSubMenu = (e, menuItem) => {\n    const selectedParent = menuItem.id;\n    const hasSubMenu = menuItem.subs && menuItem.subs.length > 0;\n    this.props.changeSelectedMenuHasSubItems(hasSubMenu);\n    if (!hasSubMenu) {\n      this.setState({\n        viewingParentMenu: selectedParent,\n        selectedParentMenu: selectedParent,\n      });\n      this.toggle();\n    } else {\n      e.preventDefault();\n\n      const { containerClassnames, menuClickCount } = this.props;\n      const currentClasses = containerClassnames\n        ? containerClassnames.split(' ').filter((x) => x !== '')\n        : '';\n\n      if (!currentClasses.includes('menu-mobile')) {\n        if (\n          currentClasses.includes('menu-sub-hidden') &&\n          (menuClickCount === 2 || menuClickCount === 0)\n        ) {\n          this.props.setContainerClassnames(3, containerClassnames, hasSubMenu);\n        } else if (\n          currentClasses.includes('menu-hidden') &&\n          (menuClickCount === 1 || menuClickCount === 3)\n        ) {\n          this.props.setContainerClassnames(2, containerClassnames, hasSubMenu);\n        } else if (\n          currentClasses.includes('menu-default') &&\n          !currentClasses.includes('menu-sub-hidden') &&\n          (menuClickCount === 1 || menuClickCount === 3)\n        ) {\n          this.props.setContainerClassnames(0, containerClassnames, hasSubMenu);\n        }\n      } else {\n        this.props.addContainerClassname(\n          'sub-show-temporary',\n          containerClassnames\n        );\n      }\n      this.setState({\n        viewingParentMenu: selectedParent,\n      });\n    }\n  };\n\n  toggleMenuCollapse = (e, menuKey) => {\n    e.preventDefault();\n\n    const { collapsedMenus } = this.state;\n    if (collapsedMenus.indexOf(menuKey) > -1) {\n      this.setState({\n        collapsedMenus: collapsedMenus.filter((x) => x !== menuKey),\n      });\n    } else {\n      collapsedMenus.push(menuKey);\n      this.setState({\n        collapsedMenus,\n      });\n    }\n    return false;\n  };\n\n  filteredList = (menuItems) => {\n    // const { currentUser } = this.props;\n    // if (currentUser) {\n    //   return menuItems.filter(x => (x.roles && x.roles.includes(currentUser.role)) || !x.roles)\n    // } else { return menuItems; }\n    return menuItems;\n  };\n\n  render() {\n    const {\n      selectedParentMenu,\n      viewingParentMenu,\n      collapsedMenus,\n    } = this.state;\n    return (\n      <div className=\"sidebar\">\n        <div className=\"main-menu\">\n          <div className=\"scroll\">\n            <PerfectScrollbar\n              options={{ suppressScrollX: true, wheelPropagation: false }}\n            >\n              <Nav vertical className=\"list-unstyled\">\n                {menuItems &&\n                  this.filteredList(menuItems).map((item) => {\n                    return (\n                      <NavItem\n                        key={item.id}\n                        className={classnames({\n                          active:\n                            (selectedParentMenu === item.id &&\n                              viewingParentMenu === '') ||\n                            viewingParentMenu === item.id,\n                        })}\n                      >\n                        {item.newWindow ? (\n                          <a\n                            href={item.to}\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                          >\n                            <i className={item.icon} /> {item.label}\n                          </a>\n                        ) : (\n                          <NavLink\n                            to={item.to}\n                            onClick={(e) => this.openSubMenu(e, item)}\n                            data-flag={item.id}\n                          >\n                            <i className={item.icon} />{' '}\n                            <IntlMessages id={item.label} />\n                          </NavLink>\n                        )}\n                      </NavItem>\n                    );\n                  })}\n              </Nav>\n            </PerfectScrollbar>\n          </div>\n        </div>\n\n        <div className=\"sub-menu\">\n          <div className=\"scroll\">\n            <PerfectScrollbar\n              options={{ suppressScrollX: true, wheelPropagation: false }}\n            >\n              {menuItems &&\n                this.filteredList(menuItems).map((item) => {\n                  return (\n                    <Nav\n                      key={item.id}\n                      className={classnames({\n                        'd-block':\n                          (this.state.selectedParentMenu === item.id &&\n                            this.state.viewingParentMenu === '') ||\n                          this.state.viewingParentMenu === item.id,\n                      })}\n                      data-parent={item.id}\n                    >\n                      {item.subs &&\n                        this.filteredList(item.subs).map((sub, index) => {\n                          return (\n                            <NavItem\n                              key={`${item.id}_${index}`}\n                              className={`${\n                                sub.subs && sub.subs.length > 0\n                                  ? 'has-sub-item'\n                                  : ''\n                              }`}\n                            >\n                              {sub.newWindow ? (\n                                <a\n                                  href={sub.to}\n                                  rel=\"noopener noreferrer\"\n                                  target=\"_blank\"\n                                >\n                                  <i className={sub.icon} />{' '}\n                                  <IntlMessages id={sub.label} />\n                                </a>\n                              ) : sub.subs && sub.subs.length > 0 ? (\n                                <>\n                                  <NavLink\n                                    className={`rotate-arrow-icon opacity-50 ${\n                                      collapsedMenus.indexOf(\n                                        `${item.id}_${index}`\n                                      ) === -1\n                                        ? ''\n                                        : 'collapsed'\n                                    }`}\n                                    to={sub.to}\n                                    id={`${item.id}_${index}`}\n                                    onClick={(e) =>\n                                      this.toggleMenuCollapse(\n                                        e,\n                                        `${item.id}_${index}`\n                                      )\n                                    }\n                                  >\n                                    <i className=\"simple-icon-arrow-down\" />{' '}\n                                    <IntlMessages id={sub.label} />\n                                  </NavLink>\n\n                                  <Collapse\n                                    isOpen={\n                                      collapsedMenus.indexOf(\n                                        `${item.id}_${index}`\n                                      ) === -1\n                                    }\n                                  >\n                                    <Nav className=\"third-level-menu\">\n                                      {this.filteredList(sub.subs).map(\n                                        (thirdSub, thirdIndex) => {\n                                          return (\n                                            <NavItem\n                                              key={`${item.id}_${index}_${thirdIndex}`}\n                                            >\n                                              {thirdSub.newWindow ? (\n                                                <a\n                                                  href={thirdSub.to}\n                                                  rel=\"noopener noreferrer\"\n                                                  target=\"_blank\"\n                                                >\n                                                  <i\n                                                    className={thirdSub.icon}\n                                                  />{' '}\n                                                  <IntlMessages\n                                                    id={thirdSub.label}\n                                                  />\n                                                </a>\n                                              ) : (\n                                                <NavLink to={thirdSub.to}>\n                                                  <i\n                                                    className={thirdSub.icon}\n                                                  />{' '}\n                                                  <IntlMessages\n                                                    id={thirdSub.label}\n                                                  />\n                                                </NavLink>\n                                              )}\n                                            </NavItem>\n                                          );\n                                        }\n                                      )}\n                                    </Nav>\n                                  </Collapse>\n                                </>\n                              ) : (\n                                <NavLink to={sub.to}>\n                                  <i className={sub.icon} />{' '}\n                                  <IntlMessages id={sub.label} />\n                                </NavLink>\n                              )}\n                            </NavItem>\n                          );\n                        })}\n                    </Nav>\n                  );\n                })}\n            </PerfectScrollbar>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ menu, authUser }) => {\n  const {\n    containerClassnames,\n    subHiddenBreakpoint,\n    menuHiddenBreakpoint,\n    menuClickCount,\n    selectedMenuHasSubItems,\n  } = menu;\n\n  return {\n    containerClassnames,\n    subHiddenBreakpoint,\n    menuHiddenBreakpoint,\n    menuClickCount,\n    selectedMenuHasSubItems,\n  };\n};\nexport default withRouter(\n  connect(mapStateToProps, {\n    setContainerClassnames,\n    addContainerClassname,\n    changeDefaultClassnames,\n    changeSelectedMenuHasSubItems,\n  })(Sidebar)\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Row } from 'reactstrap';\nimport { Colxx } from '../../components/common/CustomBootstrap';\n\nconst Footer = () => {\n  return (\n    <footer className=\"page-footer\">\n      <div className=\"footer-content\">\n        <div className=\"container-fluid\">\n          <Row>\n            <Colxx xxs=\"12\" sm=\"4\">\n              <p className=\"mb-0 text-muted\">SHINWARI-ENTERPRISE-2020</p>\n            </Colxx>\n            <Colxx xxs=\"12\" sm=\"4\">\n              Email: Shinwari.enterprises.inc1@gmail.com\n              <br />\n              Mob: +923010280002\n            </Colxx>\n\n            <Colxx className=\"col-sm-4 d-none d-sm-block\">\n              Address: Hill View Plaza #6A, Mizznine Floor Blue Area, Jinnah\n              Avenue, Islamabad\n            </Colxx>\n          </Row>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport TopNav from '../containers/navs/Topnav';\nimport Sidebar from '../containers/navs/Sidebar';\nimport Footer from '../containers/navs/Footer';\n\nconst AppLayout = ({ containerClassnames, children, history }) => {\n  return (\n    <div id=\"app-container\" className={containerClassnames}>\n      <TopNav history={history} />\n      <Sidebar />\n      <main>\n        <div className=\"container-fluid\">{children}</div>\n      </main>\n      <Footer />\n    </div>\n  );\n};\nconst mapStateToProps = ({ menu }) => {\n  const { containerClassnames } = menu;\n  return { containerClassnames };\n};\nconst mapActionToProps = {};\n\nexport default withRouter(\n  connect(mapStateToProps, mapActionToProps)(AppLayout)\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.82fedb63.jpeg\";"],"sourceRoot":""}